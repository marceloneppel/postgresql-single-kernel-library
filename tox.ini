# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
env_list = lint, unit

[vars]
src_path = {tox_root}/single_kernel_postgresql
lib_path = {src_path}/lib
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {src_path}:{lib_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS = 1
pass_env =
    PYTHONPATH
allowlist_externals =
    uv

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    uv --config-file=tox_uv.toml sync --active --group format
commands =
    uv run --active ruff check --fix {[vars]all_path}
    uv run --active ruff format {[vars]all_path}


[testenv:lint]
description = Check code against coding style standards
commands_pre =
    uv --config-file=tox_uv.toml sync --active --group lint --group format
commands =
    uv lock --check
    uv run --active codespell "{tox_root}" --skip "{tox_root}/.git" --skip "{tox_root}/.tox" \
      --skip "{tox_root}/build" --skip "{tox_root}/lib" --skip "{tox_root}/venv" \
      --skip "{tox_root}/.mypy_cache" --skip "{tox_root}/LICENSE" --skip "{tox_root}/poetry.lock"
    # pflake8 wrapper supports config from pyproject.toml
    uv run --active ruff check {[vars]all_path}
    uv run --active ruff format --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands_pre =
    uv --config-file=tox_uv.toml sync --active --group charm --group libs --group unit
commands =
    uv run --active coverage run --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    uv run --active coverage report
    uv run --active coverage xml
